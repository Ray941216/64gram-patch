diff --git a/Telegram/SourceFiles/boxes/translate_box.cpp b/Telegram/SourceFiles/boxes/translate_box.cpp
index 8178d76f8..b64c1bbc4 100644
--- a/Telegram/SourceFiles/boxes/translate_box.cpp
+++ b/Telegram/SourceFiles/boxes/translate_box.cpp
@@ -144,10 +144,6 @@ void TranslateBox(
 		box,
 		object_ptr<FlatLabel>(box, stLabel)));
 	{
-		if (hasCopyRestriction) {
-			original->entity()->setContextMenuHook([](auto&&) {
-			});
-		}
 		original->entity()->setAnimationsPausedCallback(animationsPaused);
 		original->entity()->setMarkedText(
 			text,
@@ -203,7 +199,7 @@ void TranslateBox(
 	const auto translated = box->addRow(object_ptr<SlideWrap<FlatLabel>>(
 		box,
 		object_ptr<FlatLabel>(box, stLabel)));
-	translated->entity()->setSelectable(!hasCopyRestriction);
+	translated->entity()->setSelectable(true);
 	translated->entity()->setAnimationsPausedCallback(animationsPaused);
 
 	constexpr auto kMaxLines = 3;
diff --git a/Telegram/SourceFiles/core/click_handler_types.cpp b/Telegram/SourceFiles/core/click_handler_types.cpp
index b8c50b7ac..255e192d1 100644
--- a/Telegram/SourceFiles/core/click_handler_types.cpp
+++ b/Telegram/SourceFiles/core/click_handler_types.cpp
@@ -330,17 +330,6 @@ void MonospaceClickHandler::onClick(ClickContext context) const {
 	}
 	const auto my = context.other.value<ClickHandlerContext>();
 	if (const auto controller = my.sessionWindow.get()) {
-		auto &data = controller->session().data();
-		const auto item = data.message(my.itemId);
-		const auto hasCopyRestriction = item
-			&& (!item->history()->peer->allowsForwarding()
-				|| item->forbidsForward());
-		if (hasCopyRestriction) {
-			controller->showToast(item->history()->peer->isBroadcast()
-				? tr::lng_error_nocopy_channel(tr::now)
-				: tr::lng_error_nocopy_group(tr::now));
-			return;
-		}
 		controller->showToast(tr::lng_text_copied(tr::now));
 	}
 	TextUtilities::SetClipboardText(TextForMimeData::Simple(_text.trimmed()));
diff --git a/Telegram/SourceFiles/data/data_document.cpp b/Telegram/SourceFiles/data/data_document.cpp
index 5852a9606..5f95f77c8 100644
--- a/Telegram/SourceFiles/data/data_document.cpp
+++ b/Telegram/SourceFiles/data/data_document.cpp
@@ -1333,8 +1333,7 @@ bool DocumentData::canBeStreamed(HistoryItem *item) const {
 		&& supportsStreaming()
 		&& (!isVideoFile()
 			|| storyMedia()
-			|| !ExternalVideoPlayer.value()
-			|| (item && !item->allowsForward()));
+			|| !ExternalVideoPlayer.value());
 }
 
 void DocumentData::setInappPlaybackFailed() {
diff --git a/Telegram/SourceFiles/history/history_inner_widget.cpp b/Telegram/SourceFiles/history/history_inner_widget.cpp
index ce10075a4..aeb647481 100644
--- a/Telegram/SourceFiles/history/history_inner_widget.cpp
+++ b/Telegram/SourceFiles/history/history_inner_widget.cpp
@@ -1759,12 +1759,12 @@ void HistoryInner::mouseActionStart(const QPoint &screenPos, Qt::MouseButton but
 							_selected.emplace(_mouseActionItem, selStatus);
 							_mouseAction = MouseAction::Selecting;
 							repaintItem(_mouseActionItem);
-						} else if (!hasSelectRestriction()) {
+						} else if (true) {
 							_mouseAction = MouseAction::PrepareSelect;
 						}
 					}
 				}
-			} else if (!_pressWasInactive && !hasSelectRestriction()) {
+			} else if (!_pressWasInactive) {
 				_mouseAction = MouseAction::PrepareSelect; // start items select
 			}
 		}
@@ -1793,8 +1793,7 @@ std::unique_ptr<QMimeData> HistoryInner::prepareDrag() {
 	}
 
 	const auto pressedHandler = ClickHandler::getPressed();
-	if (dynamic_cast<VoiceSeekClickHandler*>(pressedHandler.get())
-		|| hasCopyRestriction()) {
+	if (dynamic_cast<VoiceSeekClickHandler*>(pressedHandler.get())) {
 		return nullptr;
 	}
 
@@ -2032,8 +2031,7 @@ void HistoryInner::mouseActionFinish(
 
 	if (QGuiApplication::clipboard()->supportsSelection()
 		&& !_selected.empty()
-		&& _selected.cbegin()->second != FullSelection
-		&& !hasCopyRestriction(_selected.cbegin()->first)) {
+		&& _selected.cbegin()->second != FullSelection) {
 		const auto [item, selection] = *_selected.cbegin();
 		if (const auto view = viewByItem(item)) {
 			TextUtilities::SetClipboardText(
@@ -2334,7 +2332,7 @@ void HistoryInner::showContextMenu(QContextMenuEvent *e, bool showFromTouch) {
 	const auto addPhotoActions = [&](not_null<PhotoData*> photo, HistoryItem *item) {
 		const auto media = photo->activeMediaView();
 		const auto itemId = item ? item->fullId() : FullMsgId();
-		if (!photo->isNull() && media && media->loaded() && !hasCopyMediaRestriction(item)) {
+		if (!photo->isNull() && media && media->loaded()) {
 			_menu->addAction(tr::lng_context_save_image(tr::now), base::fn_delayed(st::defaultDropdownMenu.menu.ripple.hideDuration, this, [=] {
 				savePhotoToFile(photo);
 			}), &st::menuIconSaveImage);
@@ -2385,7 +2383,7 @@ void HistoryInner::showContextMenu(QContextMenuEvent *e, bool showFromTouch) {
 				showContextInFolder(document);
 			}, &st::menuIconShowInFolder);
 		}
-		if (item && !hasCopyMediaRestriction(item)) {
+		if (item) {
 			HistoryView::AddSaveSoundForNotifications(
 				_menu,
 				item,
@@ -2408,8 +2406,7 @@ void HistoryInner::showContextMenu(QContextMenuEvent *e, bool showFromTouch) {
 			not_null<HistoryItem*> item,
 			bool asGroup = true) {
 		if (item->isRegular()
-			&& !item->isService()
-			&& !hasSelectRestriction()) {
+			&& !item->isService()) {
 			const auto itemId = item->fullId();
 			_menu->addAction(tr::lng_context_select_msg(tr::now), [=] {
 				if (const auto item = session->data().message(itemId)) {
@@ -2479,8 +2476,7 @@ void HistoryInner::showContextMenu(QContextMenuEvent *e, bool showFromTouch) {
 
 		if (isUponSelected > 0) {
 			const auto selectedText = getSelectedText();
-			if (!hasCopyRestrictionForSelected()
-				&& !selectedText.empty()) {
+			if (!selectedText.empty()) {
 				_menu->addAction(
 					(isUponSelected > 1
 						? tr::lng_context_copy_selected_items(tr::now)
@@ -2535,7 +2531,7 @@ void HistoryInner::showContextMenu(QContextMenuEvent *e, bool showFromTouch) {
 					_widget->confirmDeleteSelected();
 				}, &st::menuIconDelete);
 			}
-			if (selectedState.count > 0 && !hasCopyRestrictionForSelected()) {
+			if (selectedState.count > 0) {
 				Menu::AddDownloadFilesAction(_menu, controller, _selected, this);
 			}
 			_menu->addAction(tr::lng_context_clear_selection(tr::now), [=] {
@@ -2705,7 +2701,7 @@ void HistoryInner::showContextMenu(QContextMenuEvent *e, bool showFromTouch) {
 		if (isUponSelected > 0) {
 			addReplyAction(item);
 			const auto selectedText = getSelectedText();
-			if (!hasCopyRestrictionForSelected() && !selectedText.empty()) {
+			if (!selectedText.empty()) {
 				_menu->addAction(
 					((isUponSelected > 1)
 						? tr::lng_context_copy_selected_items(tr::now)
@@ -2742,7 +2738,7 @@ void HistoryInner::showContextMenu(QContextMenuEvent *e, bool showFromTouch) {
 								Api::ToggleFavedSticker(controller->uiShow(), document, itemId);
 							}, isFaved ? &st::menuIconUnfave : &st::menuIconFave);
 						}
-						if (!hasCopyMediaRestriction(item)) {
+						if (true) {
 							_menu->addAction(tr::lng_context_save_image(tr::now), base::fn_delayed(st::defaultDropdownMenu.menu.ripple.hideDuration, this, [=] {
 								saveDocumentToFile(itemId, document);
 							}), &st::menuIconDownload);
@@ -2769,8 +2765,7 @@ void HistoryInner::showContextMenu(QContextMenuEvent *e, bool showFromTouch) {
 					FillSponsoredMessagesMenu(controller, itemId, _menu);
 				}
 				if (!item->isService() && view && actionText.isEmpty()) {
-					if (!hasCopyRestriction(item)
-						&& (view->hasVisibleText() || mediaHasTextForCopy)) {
+					if (view->hasVisibleText() || mediaHasTextForCopy) {
 						_menu->addAction(
 							tr::lng_context_copy_text(tr::now),
 							[=] { copyContextText(itemId); },
@@ -2851,7 +2846,7 @@ void HistoryInner::showContextMenu(QContextMenuEvent *e, bool showFromTouch) {
 					_widget->confirmDeleteSelected();
 				}, &st::menuIconDelete);
 			}
-			if (selectedState.count > 0 && !hasCopyRestrictionForSelected()) {
+			if (selectedState.count > 0) {
 				Menu::AddDownloadFilesAction(_menu, controller, _selected, this);
 			}
 			_menu->addAction(tr::lng_context_clear_selection(tr::now), [=] {
@@ -3086,7 +3081,7 @@ bool HistoryInner::showCopyRestrictionForSelected() {
 }
 
 void HistoryInner::copySelectedText() {
-	if (!showCopyRestrictionForSelected()) {
+	if (true) {
 		TextUtilities::SetClipboardText(getSelectedText());
 	}
 }
@@ -3116,7 +3111,7 @@ void HistoryInner::copyContextImage(
 	const auto item = session().data().message(itemId);
 	const auto media = photo->activeMediaView();
 	const auto restricted = item
-		? showCopyMediaRestriction(item)
+		? false
 		: IsServerMsgId(itemId.msg);
 	if (photo->isNull() || !media || !media->loaded()) {
 		return;
@@ -3177,7 +3172,7 @@ void HistoryInner::saveContextGif(FullMsgId itemId) {
 
 void HistoryInner::copyContextText(FullMsgId itemId) {
 	if (const auto item = session().data().message(itemId)) {
-		if (!showCopyRestriction(item)) {
+		if (true) {
 			if (const auto group = session().data().groups().find(item)) {
 				TextUtilities::SetClipboardText(HistoryGroupText(group));
 			} else {
@@ -3279,8 +3274,7 @@ void HistoryInner::keyPressEvent(QKeyEvent *e) {
 		copySelectedText();
 #ifdef Q_OS_MAC
 	} else if (e->key() == Qt::Key_E
-		&& e->modifiers().testFlag(Qt::ControlModifier)
-		&& !showCopyRestrictionForSelected()) {
+		&& e->modifiers().testFlag(Qt::ControlModifier)) {
 		TextUtilities::SetClipboardText(getSelectedText(), QClipboard::FindBuffer);
 #endif // Q_OS_MAC
 	} else if (e == QKeySequence::Delete || e->key() == Qt::Key_Backspace) {
@@ -4212,7 +4206,7 @@ void HistoryInner::mouseActionUpdate() {
 void HistoryInner::updateDragSelection(Element *dragSelFrom, Element *dragSelTo, bool dragSelecting) {
 	if (_dragSelFrom == dragSelFrom && _dragSelTo == dragSelTo && _dragSelecting == dragSelecting) {
 		return;
-	} else if (dragSelFrom && hasSelectRestriction()) {
+	} else if (dragSelFrom && false) {
 		updateDragSelection(nullptr, nullptr, false);
 		return;
 	}
@@ -4367,7 +4361,7 @@ void HistoryInner::notifyMigrateUpdated() {
 }
 
 void HistoryInner::applyDragSelection() {
-	if (!hasSelectRestriction()) {
+	if (true) {
 		applyDragSelection(&_selected);
 	}
 }
diff --git a/Telegram/SourceFiles/history/view/history_view_context_menu.cpp b/Telegram/SourceFiles/history/view/history_view_context_menu.cpp
index 0c8139f53..cf7070216 100644
--- a/Telegram/SourceFiles/history/view/history_view_context_menu.cpp
+++ b/Telegram/SourceFiles/history/view/history_view_context_menu.cpp
@@ -156,7 +156,7 @@ void AddPhotoActions(
 		HistoryItem *item,
 		not_null<ListWidget*> list) {
 	const auto contextId = item ? item->fullId() : FullMsgId();
-	if (!list->hasCopyMediaRestriction(item)) {
+	if (true) {
 		menu->addAction(
 			tr::lng_context_save_image(tr::now),
 			base::fn_delayed(
@@ -166,7 +166,7 @@ void AddPhotoActions(
 			&st::menuIconSaveImage);
 		menu->addAction(tr::lng_context_copy_image(tr::now), [=] {
 			const auto item = photo->owner().message(contextId);
-			if (!list->showCopyMediaRestriction(item)) {
+			if (true) {
 				CopyImage(photo);
 			}
 		}, &st::menuIconCopy);
@@ -223,7 +223,7 @@ void AddSaveDocumentAction(
 		HistoryItem *item,
 		not_null<DocumentData*> document,
 		not_null<ListWidget*> list) {
-	if (list->hasCopyMediaRestriction(item)) {
+	if (false) {
 		return;
 	}
 	const auto origin = item ? item->fullId() : FullMsgId();
@@ -318,7 +318,7 @@ void AddDocumentActions(
 			std::move(callback),
 			&st::menuIconStickers);
 	}
-	if (item && !list->hasCopyMediaRestriction(item)) {
+	if (item) {
 		const auto controller = list->controller();
 		AddSaveSoundForNotifications(menu, item, document, controller);
 	}
@@ -1232,13 +1232,12 @@ base::unique_qptr<Ui::PopupMenu> FillContextMenu(
 		AddWhoReactedAction(result, list, item, list->controller());
 	}
 	if (request.overSelection
-		&& !list->hasCopyRestrictionForSelected()
 		&& !list->getSelectedText().empty()) {
 		const auto text = request.selectedItems.empty()
 			? tr::lng_context_copy_selected(tr::now)
 			: tr::lng_context_copy_selected_items(tr::now);
 		result->addAction(text, [=] {
-			if (!list->showCopyRestrictionForSelected()) {
+			if (true) {
 				TextUtilities::SetClipboardText(list->getSelectedText());
 			}
 		}, &st::menuIconCopy);
@@ -1274,11 +1273,11 @@ base::unique_qptr<Ui::PopupMenu> FillContextMenu(
 			AddDocumentActions(result, document, view->data(), list);
 		}
 		if (!link && (view->hasVisibleText() || mediaHasTextForCopy)) {
-			if (!list->hasCopyRestriction(view->data())) {
+			if (true) {
 				const auto asGroup = (request.pointState != PointState::GroupPart);
 				result->addAction(tr::lng_context_copy_text(tr::now), [=] {
 					if (const auto item = owner->message(itemId)) {
-						if (!list->showCopyRestriction(item)) {
+						if (true) {
 							if (asGroup) {
 								if (const auto group = owner->groups().find(item)) {
 									TextUtilities::SetClipboardText(HistoryGroupText(group));
diff --git a/Telegram/SourceFiles/history/view/history_view_list_widget.cpp b/Telegram/SourceFiles/history/view/history_view_list_widget.cpp
index f9876fecd..ea4861068 100644
--- a/Telegram/SourceFiles/history/view/history_view_list_widget.cpp
+++ b/Telegram/SourceFiles/history/view/history_view_list_widget.cpp
@@ -1336,7 +1336,7 @@ void ListWidget::cancelSelection() {
 }
 
 void ListWidget::selectItem(not_null<HistoryItem*> item) {
-	if (hasSelectRestriction()) {
+	if (false) {
 		return;
 	} else if (const auto view = viewForItem(item)) {
 		clearTextSelection();
@@ -1349,7 +1349,7 @@ void ListWidget::selectItem(not_null<HistoryItem*> item) {
 }
 
 void ListWidget::selectItemAsGroup(not_null<HistoryItem*> item) {
-	if (hasSelectRestriction()) {
+	if (false) {
 		return;
 	} else if (const auto view = viewForItem(item)) {
 		clearTextSelection();
@@ -2286,7 +2286,7 @@ bool ListWidget::eventHook(QEvent *e) {
 }
 
 void ListWidget::applyDragSelection() {
-	if (!hasSelectRestriction()) {
+	if (true) {
 		applyDragSelection(_selected);
 	}
 	clearDragSelection();
@@ -2447,15 +2447,11 @@ void ListWidget::keyPressEvent(QKeyEvent *e) {
 			_delegate->listCancelRequest();
 		}
 	} else if (e == QKeySequence::Copy
-		&& (hasSelectedText() || hasSelectedItems())
-		&& !showCopyRestriction()
-		&& !hasCopyRestrictionForSelected()) {
+		&& (hasSelectedText() || hasSelectedItems())) {
 		TextUtilities::SetClipboardText(getSelectedText());
 #ifdef Q_OS_MAC
 	} else if (e->key() == Qt::Key_E
-		&& e->modifiers().testFlag(Qt::ControlModifier)
-		&& !showCopyRestriction()
-		&& !hasCopyRestrictionForSelected()) {
+		&& e->modifiers().testFlag(Qt::ControlModifier)) {
 		TextUtilities::SetClipboardText(getSelectedText(), QClipboard::FindBuffer);
 #endif // Q_OS_MAC
 	} else if (e == QKeySequence::Delete || e->key() == Qt::Key_Backspace) {
@@ -2935,8 +2931,7 @@ void ListWidget::leaveEventHook(QEvent *e) {
 
 void ListWidget::updateDragSelection() {
 	if (!_overState.itemId
-		|| !_pressState.itemId
-		|| hasSelectRestriction()) {
+		|| !_pressState.itemId) {
 		clearDragSelection();
 		return;
 	} else if (_items.empty() || !_overElement || !_selectEnabled) {
@@ -3142,7 +3137,7 @@ void ListWidget::mouseActionStart(
 	} else if (hasSelectedItems()) {
 		if (overSelectedItems()) {
 			_mouseAction = MouseAction::PrepareDrag;
-		} else if (!_pressWasInactive && !hasSelectRestriction()) {
+		} else if (!_pressWasInactive) {
 			_mouseAction = MouseAction::PrepareSelect;
 		}
 	}
@@ -3187,7 +3182,7 @@ void ListWidget::mouseActionStart(
 							_mouseTextSymbol,
 							_mouseTextSymbol));
 						_mouseAction = MouseAction::Selecting;
-					} else if (!hasSelectRestriction()) {
+					} else if (true) {
 						_mouseAction = MouseAction::PrepareSelect;
 					}
 				}
@@ -3316,8 +3311,7 @@ void ListWidget::mouseActionFinish(
 
 	if (QGuiApplication::clipboard()->supportsSelection()
 		&& _selectedTextItem
-		&& _selectedTextRange.from != _selectedTextRange.to
-		&& !hasCopyRestriction(_selectedTextItem)) {
+		&& _selectedTextRange.from != _selectedTextRange.to) {
 		if (const auto view = viewForItem(_selectedTextItem)) {
 			TextUtilities::SetClipboardText(
 				view->selectedText(_selectedTextRange),
@@ -3565,8 +3559,7 @@ std::unique_ptr<QMimeData> ListWidget::prepareDrag() {
 		return nullptr;
 	}
 	auto pressedHandler = ClickHandler::getPressed();
-	if (dynamic_cast<VoiceSeekClickHandler*>(pressedHandler.get())
-		|| hasCopyRestriction()) {
+	if (dynamic_cast<VoiceSeekClickHandler*>(pressedHandler.get())) {
 		return nullptr;
 	}
 
diff --git a/Telegram/SourceFiles/history/view/media/history_view_document.cpp b/Telegram/SourceFiles/history/view/media/history_view_document.cpp
index 8af96447a..4c1356271 100644
--- a/Telegram/SourceFiles/history/view/media/history_view_document.cpp
+++ b/Telegram/SourceFiles/history/view/media/history_view_document.cpp
@@ -878,7 +878,6 @@ void Document::ensureDataMediaCreated() const {
 
 bool Document::downloadInCorner() const {
 	return _data->isAudioFile()
-		&& _realParent->allowsForward()
 		&& _data->canBeStreamed(_realParent)
 		&& !_data->inappPlaybackFailed();
 }
diff --git a/Telegram/SourceFiles/history/view/media/history_view_gif.cpp b/Telegram/SourceFiles/history/view/media/history_view_gif.cpp
index 23cb61c7f..269f0a4b5 100644
--- a/Telegram/SourceFiles/history/view/media/history_view_gif.cpp
+++ b/Telegram/SourceFiles/history/view/media/history_view_gif.cpp
@@ -331,7 +331,6 @@ void Gif::validateRoundingMask(QSize size) const {
 bool Gif::downloadInCorner() const {
 	return _data->isVideoFile()
 		&& (_data->loading() || !autoplayEnabled())
-		&& _realParent->allowsForward()
 		&& _data->canBeStreamed(_realParent)
 		&& !_data->inappPlaybackFailed();
 }
diff --git a/Telegram/SourceFiles/info/media/info_media_list_widget.cpp b/Telegram/SourceFiles/info/media/info_media_list_widget.cpp
index 11bab55d1..bc963bcae 100644
--- a/Telegram/SourceFiles/info/media/info_media_list_widget.cpp
+++ b/Telegram/SourceFiles/info/media/info_media_list_widget.cpp
@@ -238,7 +238,7 @@ void ListWidget::subscribeToSession(
 void ListWidget::setupSelectRestriction() {
 	_provider->hasSelectRestrictionChanges(
 	) | rpl::filter([=] {
-		return _provider->hasSelectRestriction() && hasSelectedItems();
+		return false && hasSelectedItems();
 	}) | rpl::start_with_next([=] {
 		clearSelected();
 		if (_mouseAction == MouseAction::PrepareSelect) {
@@ -1112,7 +1112,7 @@ void ListWidget::showContextMenu(
 					&st::menuIconReport);
 			}
 		}
-		if (!_provider->hasSelectRestriction()) {
+		if (true) {
 			_contextMenu->addAction(
 				tr::lng_context_select_msg(tr::now),
 				crl::guard(this, [=] {
@@ -1750,13 +1750,12 @@ void ListWidget::mouseActionStart(
 							applyItemSelection(_pressState.item, selStatus);
 							_mouseAction = MouseAction::Selecting;
 							repaintItem(pressLayout);
-						} else if (!_provider->hasSelectRestriction()) {
+						} else if (true) {
 							_mouseAction = MouseAction::PrepareSelect;
 						}
 					}
 				}
-			} else if (!_pressWasInactive
-				&& !_provider->hasSelectRestriction()) {
+			} else if (!_pressWasInactive) {
 				_mouseAction = MouseAction::PrepareSelect; // start items select
 			}
 		}
@@ -1933,7 +1932,7 @@ void ListWidget::mouseActionFinish(
 }
 
 void ListWidget::applyDragSelection() {
-	if (!_provider->hasSelectRestriction()) {
+	if (true) {
 		applyDragSelection(_selected);
 	}
 	clearDragSelection();
diff --git a/Telegram/SourceFiles/media/view/media_view_overlay_widget.cpp b/Telegram/SourceFiles/media/view/media_view_overlay_widget.cpp
index b0436b197..bd4982d8b 100644
--- a/Telegram/SourceFiles/media/view/media_view_overlay_widget.cpp
+++ b/Telegram/SourceFiles/media/view/media_view_overlay_widget.cpp
@@ -1533,7 +1533,7 @@ void OverlayWidget::fillContextMenuActions(const MenuCallback &addAction) {
 			[=] { showInFolder(); },
 			&st::mediaMenuIconShowInFolder);
 	}
-	if (!hasCopyMediaRestriction()) {
+	if (true) {
 		if ((_document && documentContentShown()) || (_photo && _photoMedia->loaded())) {
 			addAction(
 				tr::lng_mediaview_copy(tr::now),
@@ -1584,7 +1584,7 @@ void OverlayWidget::fillContextMenuActions(const MenuCallback &addAction) {
 			[=] { deleteMedia(); },
 			&st::mediaMenuIconDelete);
 	}
-	if (!hasCopyMediaRestriction(true)) {
+	if (true) {
 		addAction(
 			tr::lng_mediaview_save_as(tr::now),
 			[=] { saveAs(); },
@@ -2342,9 +2342,9 @@ void OverlayWidget::notifyFileDialogShown(bool shown) {
 }
 
 void OverlayWidget::saveAs() {
-	if (showCopyMediaRestriction(true)) {
+	if (false) {
 		return;
-	} else if (hasCopyMediaRestriction()) {
+	} else if (false) {
 		Assert(_stories != nullptr);
 		showPremiumDownloadPromo();
 		return;
@@ -2484,7 +2484,7 @@ void OverlayWidget::downloadMedia() {
 		return;
 	} else if (Core::App().settings().askDownloadPath()) {
 		return saveAs();
-	} else if (hasCopyMediaRestriction()) {
+	} else if (false) {
 		if (_stories && !hasCopyMediaRestriction(true)) {
 			showPremiumDownloadPromo();
 		}
@@ -2706,7 +2706,7 @@ void OverlayWidget::showMediaOverview() {
 }
 
 void OverlayWidget::copyMedia() {
-	if (showCopyMediaRestriction()) {
+	if (false) {
 		return;
 	}
 	_dropdown->hideAnimated(Ui::DropdownMenu::HideOption::IgnoreShow);
diff --git a/Telegram/SourceFiles/overview/overview_layout.cpp b/Telegram/SourceFiles/overview/overview_layout.cpp
index 9f5ce3199..3fa0c092b 100644
--- a/Telegram/SourceFiles/overview/overview_layout.cpp
+++ b/Telegram/SourceFiles/overview/overview_layout.cpp
@@ -1061,7 +1061,6 @@ Document::Document(
 
 bool Document::downloadInCorner() const {
 	return _data->isAudioFile()
-		&& parent()->allowsForward()
 		&& _data->canBeStreamed(parent())
 		&& !_data->inappPlaybackFailed();
 }
